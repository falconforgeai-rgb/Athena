name: Athena CAP Validation & Dual Ledger Dispatch (v3.4)

on:
  workflow_dispatch:
    inputs:
      cap_payload:
        description: "CAP JSON payload (paste raw JSON here)"
        required: true
        default: |
          {
            "timestamp": "2025-10-30T00:00:00Z",
            "domain": "Governance",
            "context_mode": "Advisor",
            "ems": 0.83,
            "cw": 0.24,
            "ad": 0.16,
            "hci": 0.81,
            "hs": 0.89,
            "haa": 0.92,
            "er_delta": 0.04,
            "validator_ethics": "compliant",
            "validator_empathy": "aligned",
            "reasoning_summary": "Athena correctly identified proportional ethical balance in advisory context, demonstrating empathy-awareness in decision alignment.",
            "laurie_version": "v3.4",
            "governance_chain": {
              "hash_prev": "SHA256:0000000000000000000000000000000000000000000000000000000000000000",
              "hash_next": "SHA256:0000000000000000000000000000000000000000000000000000000000000000"
            },
            "status": "pending"
          }

permissions:
  contents: write

env:
  SCHEMA_PATH: "./schemas/ATHENA_CAP_SCHEMA_v3_4.json"
  LEDGER_PATH: "./CAP_LOGS"
  SCHEMA_VERSION: "v3.4"

jobs:
  validate_and_commit:
    name: Validate CAP Payload and Commit to Ledger
    runs-on: ubuntu-latest

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Write CAP payload to file safely
        run: |
          echo "📦 Checking CAP payload type..."
          echo '${{ inputs.cap_payload }}' > cap_payload_raw.txt
          echo "🧩 Raw CAP payload written to cap_payload_raw.txt"
          if ! jq empty cap_payload_raw.txt; then
            echo "❌ Invalid JSON in workflow input."
            exit 1
          fi
          jq . cap_payload_raw.txt > cap_payload.json
          echo "✅ JSON validated and normalized to cap_payload.json"

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: 🧠 Validate CAP JSON Schema (AJV 2020)
        run: |
          cat <<'EOF' > validate.js
          import fs from 'fs';
          import Ajv2020 from 'ajv/dist/2020.js';
          import addFormats from 'ajv-formats';
          const schema = JSON.parse(fs.readFileSync(process.env.SCHEMA_PATH));
          const data = JSON.parse(fs.readFileSync('cap_payload.json'));
          const ajv = new Ajv2020({ strict: false, allErrors: true });
          addFormats(ajv);
          const validate = ajv.compile(schema);
          const valid = validate(data);
          if (!valid) {
            console.error('❌ Validation errors:', validate.errors);
            process.exit(1);
          } else {
            console.log('✅ CAP JSON validated successfully.');
          }
          EOF
          npm install ajv@8 ajv-formats@2
          node validate.js

      - name: 🔐 Compute Ledger Hash
        run: |
          echo "🔐 Generating ledger hash for CAP payload..."
          HASH=$(sha256sum cap_payload.json | awk '{print $1}')
          jq --arg hash "$HASH" '.ledger_hash = $hash' cap_payload.json > tmp.json && mv tmp.json cap_payload.json
          echo "✅ Ledger hash added: $HASH"

      - name: 🪶 Commit CAP record (if valid)
        run: |
          YEAR=$(date -u +"%Y")
          MONTH=$(date -u +"%m")
          mkdir -p "$LEDGER_PATH/$YEAR/$MONTH"
          UUID=$(jq -r '.cap_id // empty' cap_payload.json)
          FILE="$LEDGER_PATH/$YEAR/$MONTH/${UUID:-cap_record_$(date +%s)}.json"
          cp cap_payload.json "$FILE"
          git config user.name "Athena-Audit-Bot"
          git config user.email "audit-bot@falconforge.ai"
          git add "$FILE"
          git commit -m "Add CAP record: ${UUID:-anonymous}"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          echo "FILE_PATH=$FILE" >> $GITHUB_ENV

      - name: 🌐 Dispatch CAP record to Zapier
        if: success()
        env:
          ZAPIER_WEBHOOK_URL: ${{ secrets.ZAPIER_WEBHOOK_URL }}
        run: |
          echo "🌍 Dispatching CAP record to Zapier..."
          node send_cap_to_zapier.js "$FILE_PATH" || echo "⚠️ Skipped Zapier sync (no CAP record file found)."

  dual_verification:
    name: 🔍 Dual Verification — Ledger Integrity & Sync
    runs-on: ubuntu-latest
    needs: validate_and_commit

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: 🔗 Run Athena Ledger Integrity Check
        run: |
          echo "🔍 Running verify_ledger_hash.js to confirm GitHub integrity..."
          node verify_ledger_hash.js || echo "⚠️ Ledger verification failed or incomplete CAP detected."

      - name: 🧾 Post Summary
        run: |
          echo "📜 Athena CAP Validation & Dual Ledger Dispatch complete."
          echo "🔐 Integrity verified on GitHub + Zapier dual chain."
          date -u +"🕒 Completed at %Y-%m-%dT%H:%M:%SZ"
