name: Athena CAP Debug Validation (Base64 Safe)

on:
  workflow_dispatch:
    inputs:
      cap_payload_b64:
        description: "Base64-encoded CAP JSON payload"
        required: true
        default: ""

permissions:
  contents: read

env:
  SCHEMA_PATH: "./schemas/ATHENA_CAP_SCHEMA_v3_4.json"

jobs:
  debug_validation:
    name: Debug CAP Input Decoding and Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Decode base64 CAP payload
        run: |
          echo "${{ github.event.inputs.cap_payload_b64 }}" | base64 --decode > cap_payload.json
          echo "✅ Decoded cap_payload.json"
          cat cap_payload.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Validate CAP JSON (Node/AJV 2020)
        run: |
          cat <<'EOF' > validate.js
          const fs = require('fs');
          const Ajv2020 = require('ajv/dist/2020');
          const addFormats = require('ajv-formats');
          const schema = JSON.parse(fs.readFileSync(process.env.SCHEMA_PATH));
          const data = JSON.parse(fs.readFileSync('cap_payload.json'));
          const ajv = new Ajv2020({ strict: false, allErrors: true });
          addFormats(ajv);
          const validate = ajv.compile(schema);
          const valid = validate(data);
          if (!valid) {
            console.error('❌ Validation errors:', validate.errors);
            process.exit(1);
          } else {
            console.log('✅ CAP JSON validated successfully.');
          }
          EOF
          npm install ajv@8 ajv-formats@2
          node validate.js
